<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.project.TestMain" tests="14" skipped="0" failures="0" errors="0" timestamp="2025-02-06T14:22:48" hostname="codespaces-ed4bd0" time="0.101">
  <properties/>
  <testcase name="testNotAlone()" classname="com.example.project.TestMain" time="0.028"/>
  <testcase name="TestShiftLeft()" classname="com.example.project.TestMain" time="0.002"/>
  <testcase name="testParseSentence()" classname="com.example.project.TestMain" time="0.016"/>
  <testcase name="testRemoveDuplicates()" classname="com.example.project.TestMain" time="0.001"/>
  <testcase name="testFix34()" classname="com.example.project.TestMain" time="0.004"/>
  <testcase name="testMode()" classname="com.example.project.TestMain" time="0.012"/>
  <testcase name="testSameFirstLast()" classname="com.example.project.TestMain" time="0.003"/>
  <testcase name="testSwapEnds()" classname="com.example.project.TestMain" time="0.001"/>
  <testcase name="testZeroFront()" classname="com.example.project.TestMain" time="0.001"/>
  <testcase name="testRemove3()" classname="com.example.project.TestMain" time="0.001"/>
  <testcase name="testReverseArray()" classname="com.example.project.TestMain" time="0.001"/>
  <testcase name="testInsertAfterI()" classname="com.example.project.TestMain" time="0.001"/>
  <testcase name="testMoveBWords()" classname="com.example.project.TestMain" time="0.001"/>
  <testcase name="testDuplicateUpperEnd()" classname="com.example.project.TestMain" time="0.001"/>
  <system-out><![CDATA[????
????
[1, 3, 1, 4]
[1, 3, 4, 1]
[1, 3, 4, 1]
[1, 3, 1, 4, 4, 3, 1]
[1, 3, 4, 1, 4, 3, 1]
[1, 3, 4, 1, 4, 3, 1]
[1, 3, 4, 1, 1, 3, 4]
[1, 3, 4, 1, 1, 3, 4]
[3, 4, 2, 2]
[3, 4, 2, 2]
[3, 4, 2, 2]
{1=1}
{1=1, 2=1}
{1=1, 2=1, 3=1}
{1=1, 2=2, 3=1}
{1=1, 2=2, 3=1, 4=1}
{1=1, 2=2, 3=1, 4=1, 5=1}
{1=1, 2=2, 3=1, 4=1, 5=2}
{1=1, 2=2, 3=1, 4=1, 5=2, 6=1}
{1=1}
{1=1, 2=1}
{1=1, 2=1, 6=1}
{1=1, 2=2, 6=1}
{1=1, 2=2, 3=1, 6=1}
{1=1, 2=2, 3=1, 4=1, 6=1}
{1=1, 2=2, 3=1, 4=1, 6=2}
{1=1, 2=2, 3=1, 4=1, 5=1, 6=2}
{1=1, 2=2, 3=1, 4=1, 5=2, 6=2}
{1=1, 2=2, 3=1, 4=1, 5=2, 6=3}
{1=1, 2=2, 3=1, 4=1, 5=2, 6=3, 7=1}
{1=1}
{1=1, 2=1}
{1=2, 2=1}
{1=2, 2=2}
{1=2, 2=2, 4=1}
{1=3, 2=2, 4=1}
{1=3, 2=3, 4=1}
{1=3, 2=3, 4=2}
{1=4, 2=3, 4=2}
{1=5, 2=3, 4=2}
{1=5, 2=3, 3=1, 4=2}
{1=1}
{1=1, 2=1}
{1=1, 2=1, 3=1}
{1=1, 2=1, 3=1, 4=1}
{1=1, 2=1, 3=2, 4=1}
{1=1, 2=2, 3=2, 4=1}
{1=2, 2=2, 3=2, 4=1}
{1=2, 2=2, 3=2, 4=2}
{1=3, 2=2, 3=2, 4=2}
{1=3, 2=3, 3=2, 4=2}
{1=3, 2=3, 3=3, 4=2}
{1=1}
{1=1, 2=1}
{1=1, 2=1, 3=1}
{1=1, 2=1, 3=1, 4=1}
{1=1, 2=1, 3=1, 4=1, 5=1}
{1=1, 2=1, 3=1, 4=1, 5=1, 6=1}
{1=1}
{1=2}
{1=2, 2=1}
{1=2, 2=2}
{1=2, 2=2, 3=1}
{1=2, 2=2, 3=2}
{1=2, 2=2, 3=2, 4=1}
{1=2, 2=2, 3=2, 4=2}
{1=2, 2=2, 3=2, 4=2, 5=1}
{1=2, 2=2, 3=2, 4=2, 5=2}
{1=2, 2=2, 3=2, 4=2, 5=2, 6=1}
{1=2, 2=2, 3=2, 4=2, 5=2, 6=2}
{1=3, 2=2, 3=2, 4=2, 5=2, 6=2}
{1=3, 2=3, 3=2, 4=2, 5=2, 6=2}
{1=3, 2=3, 3=3, 4=2, 5=2, 6=2}
{1=3, 2=3, 3=3, 4=3, 5=2, 6=2}
{1=3, 2=3, 3=3, 4=3, 5=3, 6=2}
{1=3, 2=3, 3=3, 4=3, 5=3, 6=3}
{1=1}
{1=1, 2=1}
{1=1, 2=1, 3=1}
{1=1, 2=1, 3=1, 4=1}
{1=1, 2=1, 3=1, 4=1, 5=1}
{1=1, 2=1, 3=1, 4=1, 5=1, 6=1}
{1=2, 2=1, 3=1, 4=1, 5=1, 6=1}
{1=2, 2=2, 3=1, 4=1, 5=1, 6=1}
{1=2, 2=2, 3=2, 4=1, 5=1, 6=1}
{1=2, 2=2, 3=2, 4=2, 5=1, 6=1}
{1=2, 2=2, 3=2, 4=2, 5=2, 6=1}
{1=2, 2=2, 3=2, 4=2, 5=2, 6=2}
{1=2, 2=2, 3=2, 4=2, 5=2, 6=2, 7=1}
{1=3, 2=2, 3=2, 4=2, 5=2, 6=2, 7=1}
{1=3, 2=3, 3=2, 4=2, 5=2, 6=2, 7=1}
{1=3, 2=3, 3=3, 4=2, 5=2, 6=2, 7=1}
{1=3, 2=3, 3=3, 4=3, 5=2, 6=2, 7=1}
{1=3, 2=3, 3=3, 4=3, 5=3, 6=2, 7=1}
{1=3, 2=3, 3=3, 4=3, 5=3, 6=3, 7=1}
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
